name: ams2
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.17.6 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  dartz:
  equatable:
  flutter_bloc:
  get_it:
  rxdart:
  dio: ^4.0.6
  provider: ^6.0.2
  shared_preferences: ^2.0.6
  iconly: ^1.0.1
  http: ^0.13.3
  dotted_border: ^2.0.0+2
  #image_picker: ^0.8.5
  image_picker: ^0.8.6
  #image_picker_for_web: ^2.1.10
  uuid: ^3.0.6
  fluttertoast: ^8.0.7
  # photo_view: ^0.13.0
  photo_view: ^0.14.0
  firebase_storage:
  cloud_firestore:
  google_sign_in:
  awesome_dialog: ^3.0.2
  firebase_auth:
  firebase:
  firebase_core:
  flutter_svg:
  another_flushbar: 
  google_fonts: ^3.0.1
  syncfusion_flutter_charts:
  auto_animated: ^3.0.0
  modal_bottom_sheet: ^2.0.0
  lottie: ^1.4.2
  thumbnailer: ^2.1.0
  flutter_image_compress: ^1.1.3
  image_compression: ^1.0.3 #web and descktop
  flutter_datetime_picker: ^1.5.1 # for date

  cached_network_image: ^3.2.0
  flutter_cache_manager: ^3.3.0
  pull_to_refresh: ^2.0.0
  cupertino_list_tile: ^0.2.1
  flutter_typeahead: ^3.2.5
  #dropdown_search: ^5.0.5
  syncfusion_flutter_sliders: ^19.4.56

  #other  from e-mart
  flutter_rating_bar: ^4.0.0
  flutter_slidable: ^0.6.0
  carousel_slider: ^4.0.0
  english_words: ^4.0.0
  empty_widget: ^0.0.5
  filter_list: ^1.0.0
  #flutter_braintree: ^2.2.0
  extended_image: ^4.1.0
  easy_localization: ^3.0.1
  restart_app: ^1.1.0
  intl_phone_field: ^3.1.0
  enum_to_string: ^2.0.1
  geolocator: 
  geocoding:
  csc_picker:

  # pull_to_refresh:
  #   git:
  #     url: https://github.com/miquelbeltran/flutter_pulltorefresh
  flutter_native_splash:
  shimmer: ^2.0.0
  path: ^1.8.1
  flutter_lints: ^2.0.0
dev_dependencies:
  bloc_test:
  flutter_test:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  mockito:
  mocktail:
  # icon stuff
  #to call this library use flutter pub run flutter_launcher_icons:main
  #flutter_launcher_icons: "^0.9.2"
  flutter_launcher_icons:
flutter_icons:
  image_path_android: "assets/images/icon.png"
  image_path_ios: "assets/images/icon.png"
  android: true # can specify file name here e.g. "ic_launcher"
  ios: true # can specify file name here e.g. "My-Launcher-Icon"
  image_path: "assets/images/icon.png"
  like_button: ^2.0.4

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/
    - assets/jsons/
    - assets/translations/
    - assets/country/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Muli
      fonts:
        - asset: assets/fonts/muli/Muli.ttf
        - asset: assets/fonts/muli/Muli-Bold.ttf
          weight: 700
        - asset: assets/fonts/muli/Muli-Light.ttf
          weight: 300
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#253340"
  #background_image: "assets/images/icon_small.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: "assets/images/icon.png"

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  android: true
  ios: true
  web: true

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

  # To enable support for Android 12, set the following parameter to true.  Defaults to false.
  #android12: true
